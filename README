Tinashe Mukundi Chitamba
Instructions and documentation for Ubuntu. IF you face any trouble installing
dependencies or compiling please contact me. In the very worst case, I could kindly request to demo on my PC.

REQUIREMENTS
1. glew
   In root folder
	$ git clone https://github.com/nigels-com/glew.git glew
	$ cd glew
	$ make
	$ sudo make install
	$ make clean
   May need to install the following as well
	$ sudo apt install libegl1-mesa-dev
        $ sudo apt-get install libXmu-dev libXi-dev libgl-dev dos2unix git wget
   If you have trouble installing check 

2. SDL
   In root folder
	$ git clone https://github.com/libsdl-org/SDL.git
	$ cd SDL
        $ ./configure; make; make install
Also just check the readme for SDL if having trouble installing

3. Ensure you have openGL installed as well
4. GLM header files contained in src

Run make, then make run to run the program

ACTIONS
I have implemented bump maps to my textures. There are a few textures I have put in build and their
bump maps. You can press T to add the bump maps, and L to cycle through the textures at runtime.
credits: https://learnopengl.com/Advanced-Lighting/Normal-Mapping
Basic Controls
1. T : Add/remove bump map to current texture
2. L : Cycle through different textures

Camera Movements
1. A : Rotate camera about the object to the left
2. D : Rotate camera about the object to the right
3. W : Rotate camera about the object up
4. s : Rotate camera about the object down
5. Q : Translate camera to the left, about the x axis
6. E : Translate camera to the right, about the x axis
7. O : Translate camera backwards, about the z axis
8. I : Translate camera forwad, about the z axis

Light1 Movements
1. 3 : Translate light to the positive y axis
2. 4 : Translate light to the negative y axis
3. 2 : Translate light to the negative x axis
4. 6 : Translate light to the negative z axis
5. 5 : Translate light to the positive z axis
6. 1 : Translate light to the positive x axis

Light2 Movements
1. H : Translate light to the positive y axis
2. N : Translate light to the negative y axis
3. B : Translate light to the negative x axis
4. M : Translate light to the negative z axis
5. J : Translate light to the positive z axis
6. G : Translate light to the positive x axis

7. ARROW_LEFT : Rotate object about the z axis positively
8. ARROW_DOWN : Rotate object about the x axis negatively
9. ARROW_RIGHT : Rotate object about the y axis

10. Y : Scale object positively
11. U : Scale object negatively

Color Change
1. Z : RED
2. X : GREEN
3. C : PURPLE

